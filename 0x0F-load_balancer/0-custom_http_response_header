#!/usr/bin/env bash
# This script transfers a file from the client to a server using scp.

# Function to display usage information
display_usage() {
    echo "Usage: $0 PATH_TO_FILE IP USERNAME PATH_TO_SSH_KEY"
    exit 1
}

# Check if the correct number of arguments is provided
if [ "$#" -lt 4 ]; then
    display_usage
fi

file_path=$1
server_ip=$2
username=$3
ssh_key=$4

# Transfer the file using scp
scp -o StrictHostKeyChecking=no -i "$ssh_key" "$file_path" "$username@$server_ip":~/ || { echo "Error transferring file"; exit 1; }

echo "File transferred successfully to $username@$server_ip:~/"

# Install and configure Nginx
sudo apt-get -y update
sudo apt-get -y install nginx

# Add custom response header to Nginx for debugging
HOST_NAME=$(hostname)
HEADER="\\\n\tadd_header X-Served-By $HOST_NAME;\n"
FIND=$(grep "X-Server-by" /etc/nginx/sites-available/default)
if [[ -z $FIND ]]; then
    sudo sed -i "23i $HEADER" /etc/nginx/sites-available/default
fi

# Create default index.html
echo "Hello World!" | sudo tee /var/www/html/index.html > /dev/null

# Start Nginx service
sudo service nginx start

# Additional Nginx configurations from your friend's script
# Add redirection to another page
FIND=$(grep "redirect_me" /etc/nginx/sites-available/default)
STRING="\\\n\tlocation /redirect_me {\n\t\t return 301 https://www.youtube.com/watch?v=3MbaGJN2ioQ;\n\t}\n"
if [[ -z $FIND ]]; then
    sudo sed -i "42i $STRING" /etc/nginx/sites-available/default
fi

# Add error page 404
FIND=$(grep "error_page 404" /etc/nginx/sites-available/default)
ERROR="\\\n\terror_page 404 /custom_404.html;\n"
if [[ -z $FIND ]]; then
    echo "Ceci n'est pas une page" | sudo tee /var/www/html/custom_404.html > /dev/null
    sudo sed -i "40i $ERROR" /etc/nginx/sites-available/default
fi

# Restart Nginx to apply changes
sudo service nginx restart